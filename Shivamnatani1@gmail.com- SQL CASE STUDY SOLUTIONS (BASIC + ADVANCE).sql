
 /************************/
--Case study Basic

DATA PREPARATION AND UNDERSTANDING
1.	What is the total number of rows in each of the 3 tables in the database?

SELECT COUNT(*) FROM TBL_CUSTOMER
SELECT COUNT(*) FROM TBL_PRODUCT_CATEGORY
SELECT COUNT(*) FROM TBL_TRANSACTION

2.	What is the total number of transactions that have a return?

SELECT COUNT(TOTAL_AMT) FROM TBL_TRANSACTION
WHERE TOTAL_AMT LIKE '-%'

3.	As you would have noticed, the dates provided across the 
	datasets are not in a correct format. As first steps, pls 
	convert the date variables into valid date formats before
	proceeding ahead.

SELECT CONVERT(DATE, DOB, 105) AS DATES FROM TBL_CUSTOMER 
SELECT CONVERT(DATE, TRAN_DTE, 105) FROM TBL_TRANSACTION

4.	What is the time range of the transaction data available for analysis? 
	Show the output in number of days, months and years simultaneously
	in different columns.
	
SELECT DATEDIFF(DAY, MIN(CONVERT(DATE, TRAN_DTE, 105)), MAX(CONVERT(DATE, TRAN_DTE, 105))), 
DATEDIFF(MONTH, MIN(CONVERT(DATE, TRAN_DTE, 105)), MAX(CONVERT(DATE, TRAN_DTE, 105))),  
DATEDIFF(YEAR, MIN(CONVERT(DATE, TRAN_DTE, 105)), MAX(CONVERT(DATE, TRAN_DTE, 105))) 
FROM TBL_TRANSACTION

5.	Which product category does the sub-category “DIY” belong to?

SELECT PROD_CAT
FROM TBL_PRODUCT_CATEGORY
WHERE PROD_SUBCAT LIKE 'DIY'

--DATA ANALYSIS
1.	Which channel is most frequently used for transactions?
ANS. e-Shop

SELECT TOP 1 
STORE_TYPE, COUNT(TRANSACTION_ID) Count_
FROM TBL_TRANSACTION 
GROUP BY STORE_TYPE
ORDER BY COUNT(TRANSACTION_ID) DESC


2.	What is the count of Male and Female customers in the database?
ANS. FEMLES = 2753, MALES = 2892

SELECT GENDER, COUNT(CUSTOMER_ID) AS COUNTG
FROM TBL_CUSTOMER
WHERE GENDER IN ('M' , 'F')
GROUP BY GENDER

3.	From which city do we have the maximum number of customers and how many?
ANS. 595 CUSTOMER FROM CITY CODE 3

SELECT top 1
CITY_CODE, COUNT(CUSTOMER_ID) CUST_CNT
FROM TBL_CUSTOMER
GROUP BY CITY_CODE
ORDER BY CUST_CNT DESC


4.	How many sub-categories are there under the Books category?
ANS. 

SELECT COUNT(PROD_SUBCAT) AS SUBCAT_CNT
FROM TBL_PRODUCT_CATEGORY
WHERE PROD_CAT = 'BOOKS'
GROUP BY PROD_CAT

5.	What is the maximum quantity of products ever ordered?
ANS.BOOKS

SELECT TOP 1 QTY 
FROM TBL_TRANSACTION
ORDER BY QTY DESC

--SELECT 
--TOP 1
--PROD_CAT_CODE, PROD_CAT PRODUCTS , COUNT(PROD_CAT_CODE) QUANTITY
--FROM TBL_TRANSACTION
--LEFT JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE = PROD_CAT_CODE
--GROUP BY PROD_CAT_CODE, PROD_CAT
--ORDER BY 3 DESC 


6.	What is the net total revenue generated in categories Electronics and Books?
ANS.23545157.675

SELECT SUM(TOTAL_AMT) AMOUNT
FROM TBL_TRANSACTION
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE = PROD_CAT_CODE 
AND PROD_SUB_CAT_CDE = PROD_SUBCAT_CODE
WHERE PROD_CAT IN ('BOOKS' , 'ELECTRONICS')

7.	How many customers have >10 transactions with us, excluding returns?
ANS. 6 CUSTOMERS

SELECT COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
FROM TBL_CUSTOMER WHERE CUSTOMER_ID IN 
(
SELECT CUST_ID
FROM TBL_TRANSACTION
LEFT JOIN TBL_CUSTOMER ON CUSTOMER_ID = CUST_ID
WHERE TOTAL_AMT NOT LIKE '-%'
GROUP BY
CUST_ID
HAVING 
COUNT(TRANSACTION_ID) > 10
)


8.	What is the combined revenue earned from the “Electronics” & “Clothing”
	categories, from “Flagship stores”?

SELECT SUM(TOTAL_AMT) AS AMOUNT FROM TBL_TRANSACTION
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE = PROD_CAT_CODE 
	  AND PROD_SUB_CAT_CDE = PROD_SUBCAT_CODE
WHERE PROD_CAT IN ('CLOTHING','ELECTRONICS') AND STORE_TYPE = 'FLAGSHIP STORE'

9.	What is the total revenue generated from “Male” customers 
	in “Electronics” category? Output should display total revenue by 
	prod sub-cat.

SELECT PROD_SUBCAT, SUM(TOTAL_AMT) REVENUE
FROM TBL_TRANSACTION
LEFT JOIN TBL_CUSTOMER ON CUST_ID=CUSTOMER_ID
LEFT JOIN TBL_PRODUCT_CATEGORY ON PROD_SUB_CAT_CDE = PROD_SUBCAT_CODE AND PROD_CAT_CDE = PROD_CAT_CODE
WHERE PROD_CAT_CODE= '3' AND GENDER = 'M'
GROUP BY PROD_SUBCAT_CODE, PROD_SUBCAT


10.	What is percentage of sales and returns by product sub category; 
    display only top 5 sub categories in terms of sales?

SELECT TOP 5 
PROD_SUBCAT, (SUM(TOTAL_AMT)/(SELECT SUM(TOTAL_AMT) FROM TBL_TRANSACTION))*100 AS PERCANTAGE_OF_SALES, 
(COUNT(CASE WHEN QTY< 0 THEN QTY ELSE NULL END)/SUM(QTY))*100 AS PERCENTAGE_OF_RETURN
FROM TBL_TRANSACTION
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE = PROD_CAT_CODE AND PROD_SUBCAT_CODE= PROD_SUB_CAT_CDE
GROUP BY PROD_SUBCAT
ORDER BY SUM(TOTAL_AMT) DESC


11.	For all customers aged between 25 to 35 years find what is the 
	net total revenue generated by these consumers in last 30 days of transactions
	from max transaction date available in the data?

SELECT CUST_ID,SUM(TOTAL_AMT) AS REVENUE FROM TBL_TRANSACTION
WHERE CUST_ID IN 
	(SELECT CUSTOMER_ID
	 FROM TBL_CUSTOMER
     WHERE DATEDIFF(YEAR,CONVERT(DATE,DOB,103),GETDATE()) BETWEEN 25 AND 35)
     AND CONVERT(DATE,TRAN_DTE,103) BETWEEN DATEADD(DAY,-30,(SELECT MAX(CONVERT(DATE,TRAN_DTE,103)) FROM TBL_TRANSACTION)) 
	 AND (SELECT MAX(CONVERT(DATE,TRAN_DTE,103)) FROM TBL_TRANSACTION)
GROUP BY CUST_ID


12.	Which product category has seen the max value of returns in the last 3 
	months of transactions?

SELECT TOP 1 PROD_CAT, SUM(TOTAL_AMT) FROM TBL_TRANSACTION T1
INNER JOIN TBL_PRODUCT_CATEGORY T2 ON T1.PROD_CAT_CODE = T2.PROD_CAT_CDE AND 
										T1.PROD_SUBCAT_CODE = T2.PROD_SUB_CAT_CDE
WHERE TOTAL_AMT < 0 AND 
CONVERT(date, TRAN_DTE, 103) BETWEEN DATEADD(MONTH,-3,(SELECT MAX(CONVERT(DATE,TRAN_DTE,103)) FROM TBL_TRANSACTION)) 
	 AND (SELECT MAX(CONVERT(DATE,TRAN_DTE,103)) FROM TBL_TRANSACTION)
GROUP BY PROD_CAT
ORDER BY 2 DESC

13.	Which store-type sells the maximum products; by value of sales amount and
	by quantity sold?

SELECT  STORE_TYPE, SUM(TOTAL_AMT) TOT_SALES, SUM(QTY) TOT_QUAN
FROM TBL_TRANSACTION
GROUP BY STORE_TYPE
HAVING SUM(TOTAL_AMT) >=ALL (SELECT SUM(TOTAL_AMT) FROM TBL_TRANSACTION GROUP BY STORE_TYPE)
AND SUM(QTY) >=ALL (SELECT SUM(QTY) FROM TBL_TRANSACTION GROUP BY STORE_TYPE)
 

14.	What are the categories for which average revenue is above the overall average.

SELECT PROD_CAT, AVG(TOTAL_AMT) AS AVERAGE
FROM TBL_TRANSACTION
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE=PROD_CAT_CODE AND PROD_SUB_CAT_CDE=PROD_SUBCAT_CODE
GROUP BY PROD_CAT
HAVING AVG(TOTAL_AMT)> (SELECT AVG(TOTAL_AMT) FROM TBL_TRANSACTION) 

15.	Find the average and total revenue by each subcategory for the categories 
	which are among top 5 categories in terms of quantity sold.


SELECT PROD_CAT, PROD_SUBCAT, AVG(TOTAL_AMT) AS AVERAGE_REV, SUM(TOTAL_AMT) AS REVENUE
FROM TBL_TRANSACTION
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE=PROD_CAT_CODE AND PROD_SUB_CAT_CDE=PROD_SUBCAT_CODE
WHERE PROD_CAT IN
(
SELECT TOP 5 
PROD_CAT
FROM TBL_TRANSACTION 
INNER JOIN TBL_PRODUCT_CATEGORY ON PROD_CAT_CDE= PROD_CAT_CODE AND PROD_SUB_CAT_CDE = PROD_SUBCAT_CODE
GROUP BY PROD_CAT
ORDER BY SUM(QTY) DESC
)
GROUP BY PROD_CAT, PROD_SUBCAT 

/**********************************/

--CASE STUDY ADVANCE

CREATE TABLE DIM_MANUFACTURER
(IDMANUFACTURER INT PRIMARY KEY , 
MANUFACTURER_NAME VARCHAR(20))

CREATE TABLE DIM_MODEL
(IDMODEL INT PRIMARY KEY, 
MODEL_NAME VARCHAR(20), 
UNIT_PRICE MONEY, 
IDMANUFACTURER INT REFERENCES DIM_MANUFACTURER (IDMANUFACTURER))

CREATE TABLE DIM_DATE
(DTE DATE PRIMARY KEY, 
YEAR INT, 
QUATER VARCHAR(20), 
MONTH VARCHAR (20))

CREATE TABLE DIM_CUSTOMER
(IDCUSTOMER INT PRIMARY KEY, 
CUSTOMER_NAME VARCHAR(20), 
EMAIL VARCHAR(100), 
PHONE INT)

CREATE TABLE DIM_LOCATION
(ID_LOCATION INT PRIMARY KEY, 
ZIPCODE INT, 
COUNTRY VARCHAR (20), 
STATE VARCHAR (20), 
CITY VARCHAR (20))

CREATE TABLE FACT_TRANSACTION
(IDMODEL INT REFERENCES DIM_MODEL(IDMODEL), 
IDCUSTOMER INT REFERENCES DIM_CUSTOMER(IDCUSTOMER), 
IDLOCATION INT REFERENCES DIM_LOCATION(ID_LOCATION), 
DTE DATE REFERENCES DIM_DATE(DTE),
TOTALPRICE MONEY,
QUANTITY INT
)

/*********************************/

USE CASE_STUDY

SELECT * FROM DIM_LOCATION
SELECT * FROM DIM_CUSTOMER
SELECT * FROM DIM_DATE
SELECT * FROM DIM_MANUFACTURER
SELECT * FROM DIM_MODEL
SELECT * FROM FACT_TRANSACTION



Questions: Write queries to find out the following:

1.	List all the states in which we have customers who have bought cellphones 
	from 2005 till today.

SELECT STATE 
FROM FACT_TRANSACTION T1
INNER JOIN DIM_LOCATION T2 ON T1.IDLOCATION= T2.ID_LOCATION
INNER JOIN DIM_MODEL T3 ON T1.IDMODEL= T3.IDMODEL
WHERE DTE BETWEEN '01-01-2015' AND GETDATE()


2.	What state in the US is buying more 'Samsung' cell phones?

SELECT TOP 1 
STATE FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTION ON DIM_LOCATION.ID_LOCATION=FACT_TRANSACTION.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTION.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME = 'Samsung'
GROUP BY STATE
ORDER BY SUM(QUANTITY) DESC


3.	Show the number of transactions for each model per zip code per state.

SELECT MODEL_NAME, ZIPCODE, STATE, COUNT(IDCUSTOMER) AS NO_OF_TRANSACTIONS FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTION ON DIM_LOCATION.ID_LOCATION=FACT_TRANSACTION.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTION.IDMODEL = DIM_MODEL.IDMODEL
GROUP BY MODEL_NAME, ZIPCODE, STATE


4.	Show the cheapest cellphone

SELECT TOP 1
IDMODEL, MODEL_NAME FROM DIM_MODEL
ORDER BY UNIT_PRICE

5.	Find out the average price for each model in the top5 manufacturers in 
	terms of sales quantity and order by average price.

SELECT MODEL_NAME, AVG(UNIT_PRICE) AS AVG_PRICE FROM DIM_MODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME IN 
(
SELECT TOP 5 MANUFACTURER_NAME FROM FACT_TRANSACTION 
INNER JOIN DIM_MODEL ON FACT_TRANSACTION.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(QUANTITY)
)
GROUP BY MODEL_NAME
ORDER BY AVG(UNIT_PRICE) DESC


6.	List the names of the customers and the average amount spent in 2009, 
	where the average is higher than 500

SELECT CUSTOMER_NAME, AVG(TOTALPRICE) AVG_SPENT
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTION ON DIM_CUSTOMER.IDCUSTOMER = FACT_TRANSACTION.IDCUSTOMER
WHERE YEAR(DTE) = 2009 
GROUP BY CUSTOMER_NAME
HAVING AVG(TOTALPRICE)>500

7.	List if there is any model that was in the top 5 in terms of quantity, 
	simultaneously in 2008, 2009 and 2010

SELECT MODEL_NAME 
FROM FACT_TRANSACTION
INNER JOIN DIM_MODEL ON FACT_TRANSACTION.IDMODEL= DIM_MODEL.IDMODEL
GROUP BY MODEL_NAME
HAVING 
SUM(QUANTITY) >= (SELECT TOP 5 SUM(QUANTITY) FROM FACT_TRANSACTION WHERE YEAR(DTE) = 2008  GROUP BY IDMODEL ORDER BY SUM(QUANTITY) DESC) AND 
SUM(QUANTITY) >= (SELECT TOP 5 SUM(QUANTITY) FROM FACT_TRANSACTION WHERE YEAR(DTE) = 2009  GROUP BY IDMODEL ORDER BY SUM(QUANTITY) DESC) AND 
SUM(QUANTITY) >= (SELECT TOP 5 SUM(QUANTITY) FROM FACT_TRANSACTION WHERE YEAR(DTE) = 2010  GROUP BY IDMODEL ORDER BY SUM(QUANTITY) DESC)


8.	Show the manufacturer with the 2nd top sales in the year of 2009 and the 
	manufacturer with the 2nd top sales in the year of 2010.

SELECT TOP 1 MANUFACTURER_NAME 
FROM DIM_MANUFACTURER T1
INNER JOIN DIM_MODEL T2 ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
INNER JOIN FACT_TRANSACTION T3 ON T2.IDMODEL= T3.IDMODEL
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(TOTALPRICE) DESC


9.	Show the manufacturers that sold cellphone in 2010 but didn’t in 2009.

SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER T1
INNER JOIN DIM_MODEL T2 ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
INNER JOIN FACT_TRANSACTION T3 ON T2.IDMODEL= T3.IDMODEL
WHERE YEAR(DTE) = 2010 
EXCEPT 
SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER T1
INNER JOIN DIM_MODEL T2 ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
INNER JOIN FACT_TRANSACTION T3 ON T2.IDMODEL= T3.IDMODEL
WHERE YEAR(DTE) = 2009


10.	Find top 100 customers and their average spend, average quantity by each year.
	Also find the percentage of change in their spend.

SELECT TOP 100 CUSTOMER_NAME, 
AVG(CASE WHEN YEAR(DTE) = 2005 THEN TOTALPRICE END) AS AVERAGE_PRICE_2005,
AVG(CASE WHEN YEAR(DTE) = 2005 THEN QUANTITY END) AS AVERAGE_QTY_2005,
AVG(CASE WHEN YEAR(DTE) = 2018 THEN TOTALPRICE END) AS AVERAGE_PRICE_2018,
AVG(CASE WHEN YEAR(DTE) = 2018 THEN QUANTITY END) AS AVERAGE_QTY_2018
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTION T1 ON T1.IDCUSTOMER= DIM_CUSTOMER.IDCUSTOMER
GROUP BY CUSTOMER_NAME





